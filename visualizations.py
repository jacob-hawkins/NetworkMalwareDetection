import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.tree import plot_tree
import os

def createCorrMatrix(df, axislabel, title, filename):
    os.makedirs('./results', exist_ok=True) 

    plt.figure(figsize=(10,7))
    ax = sns.heatmap(df, annot=True, yticklabels=axislabel, xticklabels=axislabel, cmap='Blues')
    ax.set(title=title)

    plt.savefig(f'results/{filename}.png')

def createPieChart(percentages, labels, filename):
    os.makedirs('./results', exist_ok=True) 
    
    plt.pie(percentages, labels=labels)

    plt.savefig(f'results/{filename}.png')

def lossCurveGraph(loss_curves, labels, filename):
    os.makedirs('./results', exist_ok=True)
    
    for i, loss_curve in enumerate(loss_curves):
        ax = sns.lineplot(loss_curve, label=labels[i])

        ax.set(xlabel='iterations', ylabel='loss')
    
    plt.savefig(f'results/{filename}.png')

def createAccuracyHeatmap(data, xtick, ytick, xlabel, ylabel, colorbarlabel, title, filename):
    os.makedirs('./results', exist_ok=True)
    
    plt.figure(figsize=(10,8))
    ax = sns.heatmap(data=data, yticklabels=ytick, xticklabels=xtick, cbar_kws={'label': colorbarlabel}, cmap='rocket_r', annot=True, fmt='0.4f')
    ax.set(xlabel=xlabel, ylabel=ylabel, title=title)

    plt.savefig(f'results/{filename}.png')

def createDecisionTree(data, feature_names, title, filename):
    os.makedirs('./results', exist_ok=True)

    plt.figure(figsize=(20, 10))
    plot_tree(data, filled=True, feature_names=feature_names, class_names=True, rounded=True)
    plt.title(title)

    plt.savefig(f'results/{filename}.png')