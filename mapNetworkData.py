"""
This program converts all non-numeric features into numeric ones and outputs the resulting data in data/cleanFeatures.csv
"""

import pandas as pd 
import numpy as np
from random import getrandbits

from tabulate import tabulate

def createMappingDict(col: pd.DataFrame) -> dict: 
    mappingDict = {}
    data_arr = col.to_numpy()

    for i in np.unique(data_arr): 
        mappingDict[i] = getrandbits(32)

    return mappingDict

def columnStrToInt(data: pd.DataFrame, col: str) -> pd.DataFrame: 
    mapDict = createMappingDict(data[col])
    data[col] = data[col].map(mapDict)

    return data 

def cleanLabels(data: pd.DataFrame): 
    mappingDict = {}
    data_arr = data['label'].to_numpy()

    maliciousNum = getrandbits(32)

    for i in np.unique(data_arr): 
        if i.startswith("Malicious"): 
            mappingDict[i] = maliciousNum
        else: 
            mappingDict[i] = getrandbits(32)

    data['label'] = data['label'].map(mappingDict)

    return data

def mapNetworkData(): 
    data = pd.read_csv('data/master.csv')

    # There are 11 different origin IP addresses. 
    # print(data['id.orig_h'].nunique())

    # Three are 288 different destination IP addresses.           
    # print(data['id.resp_h'].nunique())

    # There are 2 different protocols. 
    # print(data['proto'].nunique())

    # There are 6 different services 
    # print(data['service'].nunique())

    # There are 101 different histories 
    # print(data['history'].nunique())

    # There are 5 different labels 
    # print(data['label'].nunique())

    # There are 8 different connection states 
    # print(data['conn_state'].nunique())
    
    data = columnStrToInt(data, 'id.orig_h')
    data = columnStrToInt(data, 'id.resp_h')
    data = columnStrToInt(data, 'proto')
    data = columnStrToInt(data, 'service')
    data = columnStrToInt(data, 'history')
    data = columnStrToInt(data, 'conn_state')

    data = cleanLabels(data)

    # There are 2 different labels after mapping! 
    # print(data['label'].nunique())

    print(tabulate(data, headers = 'keys', tablefmt = 'psql'))
    data.to_csv('data/cleanFeatures.csv', index=False)
    
mapNetworkData()