import pandas as pd 
import socket
import struct 

def ipToNum(ipAddr: str) -> int: 
    packedIP = socket.inet_aton(ipAddr)
    return struct.unpack("!L", packedIP)[0]

def convertAndReplaceIp(data: pd.DataFrame) -> pd.DataFrame: 
    origIpNums = [ipToNum(x) for x in data['id.orig_h']]
    respIpNums = [ipToNum(x) for x in data['id.resp_h']]

    newIpCols = pd.DataFrame(list(zip(origIpNums, respIpNums)), columns =['origIpNum', 'respIpNum'])
    
    data['id.orig_h'] = newIpCols['origIpNum']
    data['id.resp_h'] = newIpCols['respIpNum']

    return data

def mapNetworkData(): 
    data = pd.read_csv('data/master.csv')

    # There are 11 different origin IP addresses. 
    # print(data['id.orig_h'].nunique())

    # Three are 288 different destination IP addresses.           
    # print(data['id.resp_h'].nunique())
    
    data = convertAndReplaceIp(data)
    

mapNetworkData()